{"ast":null,"code":"import { ElementRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-quill\";\nexport let SeeMoreComponent = /*#__PURE__*/(() => {\n  class SeeMoreComponent {\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.maxLength = 100;\n      this.hideToggle = true;\n      this.isCollapsed = true;\n    }\n\n    toggleView() {\n      this.isCollapsed = !this.isCollapsed;\n      this.determineView();\n    }\n\n    determineView() {\n      if (!this.text || this.text.length <= this.maxLength) {\n        this.currentText = this.text;\n        this.isCollapsed = false;\n        this.hideToggle = true;\n        return;\n      }\n\n      this.hideToggle = false;\n\n      if (this.isCollapsed === true) {\n        this.currentText = this.text.substring(0, this.maxLength) + '...';\n        this.linkText = 'Read more';\n      } else if (this.isCollapsed === false) {\n        this.currentText = this.text;\n        this.linkText = 'Read less';\n      }\n    }\n\n    ngOnChanges() {\n      this.determineView();\n    }\n\n  }\n\n  SeeMoreComponent.ɵfac = function SeeMoreComponent_Factory(t) {\n    return new (t || SeeMoreComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  SeeMoreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SeeMoreComponent,\n    selectors: [[\"app-see-more\"]],\n    inputs: {\n      text: \"text\",\n      maxLength: \"maxLength\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"theme\", \"snow\", 3, \"content\"]],\n    template: function SeeMoreComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"quill-view-html\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"content\", ctx.text);\n      }\n    },\n    dependencies: [i1.QuillViewHTMLComponent]\n  });\n  return SeeMoreComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}