{"ast":null,"code":"import _asyncToGenerator from \"/Users/jamz/jennies-goodies/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { getBaseUrl, getResponse } from 'src/app/utils/utility-functions';\nimport geocodeResponseJson from './../../db_mock/geocode_response.json';\nimport matrixResponseJson from './../../db_mock/matrix_response.json';\nimport * as _ from 'lodash';\nlet GoogleMapsService = class GoogleMapsService {\n  constructor(fns, http) {\n    this.fns = fns;\n    this.http = http;\n  }\n\n  getFormattedAddressComponent(address_components) {\n    const formattedAddressComponent = {};\n\n    _.each(address_components, function (k, v1) {\n      _.each(address_components[v1].types, function (k2, v2) {\n        formattedAddressComponent[address_components[v1].types[v2]] = address_components[v1].short_name;\n      });\n    });\n\n    return formattedAddressComponent;\n  }\n\n  getGeoCode(customerAddress) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const reqBody = {\n        customerAddress\n      };\n\n      const callback = () => _this.http.post(`${getBaseUrl()}/getGeoCoordinates`, reqBody);\n\n      const geocodeResponse = yield getResponse(callback, geocodeResponseJson).toPromise();\n      return _.get(geocodeResponse, 'data.results[0]', {});\n    })();\n  }\n\n  getDeliveryDistance(customerLat, customerLon) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let miles = 0;\n      const meterToMileFormula = 0.000621371 / 1;\n      const reqBody = {\n        customerLat,\n        customerLon\n      };\n\n      const callback = () => _this2.http.post(`${getBaseUrl()}/getDistance`, reqBody);\n\n      const distanceResponse = yield getResponse(callback, matrixResponseJson).toPromise();\n\n      const metersToDestination = _.get(distanceResponse, 'rows[0].elements[0].distance.value');\n\n      if (metersToDestination >= 0) {\n        miles = metersToDestination * meterToMileFormula;\n      }\n\n      return miles;\n    })();\n  }\n\n};\nGoogleMapsService = __decorate([Injectable({\n  providedIn: 'root'\n})], GoogleMapsService);\nexport { GoogleMapsService };","map":null,"metadata":{},"sourceType":"module"}