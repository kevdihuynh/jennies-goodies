{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { GlobalConstants } from '../../utils/global-constants';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nlet AdminComponent = class AdminComponent {\n  constructor(firestore) {\n    this._ = _;\n    this.moment = moment;\n    this.globalConstants = GlobalConstants;\n    this.totalProfit = 0;\n    this.selectedMode = 'all';\n    this.popularity = [];\n    firestore.collection('transactions').valueChanges().subscribe(transactions => {\n      this.transactions = _.orderBy(transactions, transaction => _.get(transaction, ['orderForm', 'selectedDateTime', 'start', 'dateTime']), ['desc']);\n      this.totalProfit = _.reduce(this.transactions, (sum, transaction) => {\n        return sum + _.toNumber(_.get(transaction, ['orderForm', 'grandTotal'], 0));\n      }, 0);\n      const popularityDict = {};\n\n      _.forEach(this.transactions, transaction => {\n        _.forEach(_.get(transaction, ['orderForm', 'orders'], []), order => {\n          const name = _.get(order, ['name']);\n\n          const quantity = _.toNumber(_.get(order, ['quantity'], 1));\n\n          popularityDict[name] = (popularityDict[name] || 0) + quantity;\n        });\n      });\n\n      this.popularity = _.orderBy(_.map(popularityDict, (quantity, name) => {\n        return {\n          name,\n          quantity\n        };\n      }), ['quantity'], ['desc']);\n    });\n  }\n\n  ngOnInit() {}\n\n  isPickupToday(transaction) {\n    const dateSelected = _.get(transaction, ['orderForm', 'selectedDateTime', 'start', 'dateTime']);\n\n    return moment(moment(dateSelected).format('YYYY-MM-DD')).isSame(moment().format('YYYY-MM-DD'));\n  }\n\n  isCreatedToday(transaction) {\n    const dateSelected = _.get(transaction, ['paypal', 'create_time']);\n\n    return moment(moment(dateSelected).format('YYYY-MM-DD')).isSame(moment().format('YYYY-MM-DD'));\n  }\n\n  isCompletedSales(transaction) {\n    const dateSelected = _.get(transaction, ['orderForm', 'selectedDateTime', 'start', 'dateTime']);\n\n    return moment(moment(dateSelected).format('YYYY-MM-DD')).isBefore(moment().format('YYYY-MM-DD'));\n  }\n\n  getFilteredTransactions() {\n    switch (_.toLower(this.selectedMode)) {\n      case 'pickup_today':\n        return _.filter(this.transactions, transaction => this.isPickupToday(transaction));\n\n      case 'created_today':\n        return _.filter(this.transactions, transaction => this.isCreatedToday(transaction));\n\n      case 'active':\n        return _.filter(this.transactions, transaction => {\n          const dateSelected = _.get(transaction, ['orderForm', 'selectedDateTime', 'start', 'dateTime']);\n\n          return moment(moment(dateSelected).format('YYYY-MM-DD')).isAfter(moment().format('YYYY-MM-DD'));\n        });\n\n      case 'completed':\n        return _.filter(this.transactions, transaction => this.isCompletedSales(transaction));\n\n      default:\n        return this.transactions;\n    }\n  }\n\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})], AdminComponent);\nexport { AdminComponent };","map":null,"metadata":{},"sourceType":"module"}