{"ast":null,"code":"import { NgbModalConfig, NgbModal, NgbModalOptions } from '@ng-bootstrap/ng-bootstrap';\nimport { OrderForm } from 'src/app/interfaces/cart';\nimport { CartModalComponent } from './cart-modal/cart-modal.component';\nimport * as _ from 'lodash';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"src/app/services/cart/cart.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction CartButtonComponent_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind4(2, 1, ctx_r0.orderForm.grandTotal, \"USD\", \"symbol\", \"1.2-2\"));\n  }\n}\n\nexport let CartButtonComponent = /*#__PURE__*/(() => {\n  class CartButtonComponent {\n    constructor(config, modalService, cartService) {\n      this.config = config;\n      this.modalService = modalService;\n      this.cartService = cartService;\n      this._ = _;\n      this.config.backdrop = 'static';\n      this.config.keyboard = false;\n      this.config.windowClass = 'modal-100';\n    }\n\n    ngOnInit() {\n      this.cartService.orderForm.subscribe(orderForm => {\n        this.orderForm = orderForm;\n      });\n    }\n\n    openCartModal() {\n      const modalOptions = {\n        backdrop: 'static',\n        keyboard: false,\n        size: 'lg',\n        windowClass: 'modal-100'\n      };\n      const modalRef = this.modalService.open(CartModalComponent, modalOptions);\n      modalRef.result.then(closeReason => {\n        switch (closeReason) {\n          case 'payment-success':\n            console.log('payment-success');\n        }\n      }, dismissReason => {});\n    }\n\n  }\n\n  CartButtonComponent.ɵfac = function CartButtonComponent_Factory(t) {\n    return new (t || CartButtonComponent)(i0.ɵɵdirectiveInject(i1.NgbModalConfig), i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.CartService));\n  };\n\n  CartButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartButtonComponent,\n    selectors: [[\"app-cart-button\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"btn\", \"btn-md\", \"btn-dark\", 3, \"click\"], [1, \"mr-2\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-shopping-cart\", \"mr-2\"], [4, \"ngIf\"]],\n    template: function CartButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CartButtonComponent_Template_button_click_0_listener() {\n          return ctx.openCartModal();\n        });\n        i0.ɵɵelementStart(1, \"span\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"i\", 2);\n        i0.ɵɵtemplate(4, CartButtonComponent_span_4_Template, 3, 6, \"span\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.orderForm.totalOrdersQuantity);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.orderForm.grandTotal > 0);\n      }\n    },\n    dependencies: [i3.NgIf, i3.CurrencyPipe]\n  });\n  return CartButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}